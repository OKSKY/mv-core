= Abbreviations

MV - Migration Validators Projects. All gems that belongs to that project are prefixed with mv-*

= Project goals

Main goal of the project is to allow developer to express database constraints in a Ruby like manner. 

= mv-core

mv-core is a set of core classes that are used everywhere across Migration Validators project gems. 

= Usage

  Create new table:

  create_table do |t|
    t.string :str_column, :validates => {:uniqueness => true, :inclusion => {:in => 1..3}}
    t.column :column_name, :integer, :validates => {:exclusion => {:in => [1,2,3]}}
  end

  Modify existing table: 

  change_table do |t|
    t.change :str_column, :integer, :validates => {:exclusion => {:in => [1,2,3]}}
    t.change_validates :column_name, :inclusion => {:in => 1..3}
  end

  Update existing table with new validators: 

  validate_column :table_name, :str_column, :exclusion => {:in => [1,2,3]}

  Remove existing validators: 

  change_table do |t|
    t.change :str_column, :integer, :validates => {:exclusion => false}
  end
  validate_column table_name, :str_column, :exclusion => false

  Define the way how validator will be created:

  as trigger:

  validate_column :table_name, :str_column, :validates => {:uniqueness => true, :as => :trigger }

  as check constraint:

  validate_column :table_name, :str_column, :validates => {:uniqueness => true, :as => :check }

  Define event that will be validates:

  while new record creation: 

  validate_column :table_name, :str_column, :validates => {:uniqueness => true, :on => :create }

  or while updating of existing record:

  validate_column :table_name, :str_column, :validates => {:uniqueness => true, :on => :create }

  Supported validators and their properties might vary from one db driver to another. See detailed properties description in correspondent driver section.  

= Drivers

Currently there are drivers for MySQL, PostgreSQL and SQLite RDBMS

So - see detailed info here: 

PostgreSQL: https://github.com/vprokopchuk256/mv-postgresql

MySQL: https://github.com/vprokopchuk256/mv-mysql

SQLite: https://github.com/vprokopchuk256/mv-sqlite


== Contributing to mv-core
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Valeriy Prokopchuk. See LICENSE.txt for
further details.
